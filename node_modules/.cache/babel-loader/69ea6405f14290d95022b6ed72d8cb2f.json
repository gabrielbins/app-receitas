{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/sd-017-project-recipes-app/src/components/Card.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FOODS, DRINKS } from '../helpers/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    data,\n    type\n  } = _ref;\n\n  // Quando utilizar o card lembrar de colocar o index junto com os dados da API;\n  switch (type) {\n    case FOODS:\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/foods/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${data.index}-recipe-card`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.strMealThumb,\n            alt: \"receita\",\n            \"data-testid\": `${data.index}-card-img`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            \"data-testid\": `${data.index}-card-name`,\n            children: data.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this);\n\n    case DRINKS:\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/drinks/:id\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${data.index}-recipe-card`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.strDrinkThumb,\n            alt: \"receita\",\n            \"data-testid\": `${data.index}-card-img`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            \"data-testid\": `${data.index}-card-name`,\n            children: data.strDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this);\n\n    default:\n      break;\n  }\n}\n_c = Card;\nCard.propTypes = {\n  data: PropTypes.shape({\n    index: PropTypes.number,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string\n  }).isRequired,\n  type: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/gabriel/projetos/sd-017-project-recipes-app/src/components/Card.jsx"],"names":["React","PropTypes","Link","FOODS","DRINKS","Card","data","type","id","index","strMealThumb","strMeal","strDrinkThumb","strDrink","propTypes","shape","number","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;;AAEA,eAAe,SAASC,IAAT,OAA8B;AAAA,MAAhB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgB;;AAC3C;AAEA,UAAQA,IAAR;AACA,SAAKJ,KAAL;AACE,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAI,UAASK,EAAG,EAAxB;AAAA,+BACE;AAAK,yBAAe,GAAEF,IAAI,CAACG,KAAM,cAAjC;AAAA,kCACE;AACE,YAAA,GAAG,EAAGH,IAAI,CAACI,YADb;AAEE,YAAA,GAAG,EAAC,SAFN;AAGE,2BAAe,GAAEJ,IAAI,CAACG,KAAM;AAH9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,2BAAe,GAAEH,IAAI,CAACG,KAAM,YAAhC;AAAA,sBAA+CH,IAAI,CAACK;AAApD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAaF,SAAKP,MAAL;AACE,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA,+BACE;AAAK,yBAAe,GAAEE,IAAI,CAACG,KAAM,cAAjC;AAAA,kCACE;AACE,YAAA,GAAG,EAAGH,IAAI,CAACM,aADb;AAEE,YAAA,GAAG,EAAC,SAFN;AAGE,2BAAe,GAAEN,IAAI,CAACG,KAAM;AAH9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,2BAAe,GAAEH,IAAI,CAACG,KAAM,YAAhC;AAAA,sBAA+CH,IAAI,CAACO;AAApD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;;AAYF;AACE;AA7BF;AA+BD;KAlCuBR,I;AAoCxBA,IAAI,CAACS,SAAL,GAAiB;AACfR,EAAAA,IAAI,EAAEL,SAAS,CAACc,KAAV,CAAgB;AACpBN,IAAAA,KAAK,EAAER,SAAS,CAACe,MADG;AAEpBN,IAAAA,YAAY,EAAET,SAAS,CAACgB,MAFJ;AAGpBN,IAAAA,OAAO,EAAEV,SAAS,CAACgB,MAHC;AAIpBL,IAAAA,aAAa,EAAEX,SAAS,CAACgB,MAJL;AAKpBJ,IAAAA,QAAQ,EAAEZ,SAAS,CAACgB;AALA,GAAhB,EAMHC,UAPY;AAQfX,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBC;AARR,CAAjB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FOODS, DRINKS } from '../helpers/constants';\n\nexport default function Card({ data, type }) {\n  // Quando utilizar o card lembrar de colocar o index junto com os dados da API;\n\n  switch (type) {\n  case FOODS:\n    return (\n      <Link to={ `/foods/${id}` }>\n        <div data-testid={ `${data.index}-recipe-card` }>\n          <img\n            src={ data.strMealThumb }\n            alt=\"receita\"\n            data-testid={ `${data.index}-card-img` }\n          />\n          <h1 data-testid={ `${data.index}-card-name` }>{data.strMeal}</h1>\n        </div>\n      </Link>\n    );\n\n  case DRINKS:\n    return (\n      <Link to=\"/drinks/:id\">\n        <div data-testid={ `${data.index}-recipe-card` }>\n          <img\n            src={ data.strDrinkThumb }\n            alt=\"receita\"\n            data-testid={ `${data.index}-card-img` }\n          />\n          <h1 data-testid={ `${data.index}-card-name` }>{data.strDrink }</h1>\n        </div>\n      </Link>\n    );\n  default:\n    break;\n  }\n}\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    index: PropTypes.number,\n    strMealThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strDrink: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}