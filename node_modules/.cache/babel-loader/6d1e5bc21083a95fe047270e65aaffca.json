{"ast":null,"code":"var _jsxFileName = \"/home/gabrielbins/Documentos/repositorio github/app-receitas/src/pages/DrinkRecipe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FIRS_SIX } from '../helpers/constants';\nimport fetchDrinkRecipe from '../services/fetchDrinkRecipe ';\nimport getIngredientesMeasure from '../helpers/getDrinkIngrMeasure';\nimport { isFavorite, handleFavoriteDrink } from '../helpers/setFavorite';\nimport AppContext from '../context/context';\nimport SugestCard from '../components/SugestCard';\nimport '../styles/recipe.css';\nimport verifyRecipe from '../helpers/verifyRecipe';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst copy = require('clipboard-copy');\n\nexport default function DrinkRecipe() {\n  _s();\n\n  const {\n    foodData\n  } = useContext(AppContext);\n  const [recipe, setRecipe] = useState({});\n  const [verify, setVerify] = useState('new');\n  const [ingrMeasure, setIngrMeasure] = useState({});\n  const [copyMessage, setCopyMessage] = useState('');\n  const [favorite, setFavorite] = useState(false);\n  const history = useHistory();\n  const {\n    location: {\n      pathname\n    }\n  } = history;\n\n  const getData = async id => {\n    const data = await fetchDrinkRecipe(id);\n    setRecipe(data);\n    getIngredientesMeasure(data, setIngrMeasure);\n  };\n\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    getData(id);\n    verifyRecipe(id, setVerify, 'cocktails');\n    isFavorite(id, setFavorite);\n  }, [pathname]);\n\n  const startCooking = () => {\n    history.push(`/drinks/${pathname.split('/')[2]}/in-progress`);\n  };\n\n  const share = () => {\n    copy(`http://localhost:3000${pathname}`);\n    setCopyMessage('Link copied!');\n  };\n\n  if (Object.keys(recipe).length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"recipe-photo\",\n        alt: \"drink\",\n        src: recipe.strDrinkThumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"recipe-title\",\n        children: recipe.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), copyMessage.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: copyMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"share-btn\",\n        type: \"button\",\n        onClick: share,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareIcon,\n          alt: \"share icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          handleFavoriteDrink(favorite, setFavorite, recipe);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"favorite-btn\",\n          src: favorite ? blackHeartIcon : whiteHeartIcon,\n          alt: \"favorite icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: recipe.strAlcoholic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(ingrMeasure).length > 0 && ingrMeasure.filterIngridients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": `${index}-ingredient-name-and-measure`,\n          children: `${ingredient} - ${ingrMeasure.filterMeasures[index] || ''}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: recipe.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel\",\n        children: foodData.length > 0 && foodData.slice(0, FIRS_SIX).map((sugestion, index) => /*#__PURE__*/_jsxDEV(SugestCard, {\n          data: { ...sugestion,\n            index,\n            type: 'food'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), verify === 'new' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fixed-bottom border\",\n        \"data-testid\": \"start-recipe-btn\",\n        type: \"button\",\n        onClick: startCooking,\n        children: \"Start Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), verify === 'started' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fixed-bottom border\",\n        \"data-testid\": \"start-recipe-btn\",\n        type: \"button\",\n        children: \"Continue Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 11\n  }, this);\n}\n\n_s(DrinkRecipe, \"PNY7c3b1iaGcI+d5BYVjJDowe0Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = DrinkRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrinkRecipe\");","map":{"version":3,"sources":["/home/gabrielbins/Documentos/repositorio github/app-receitas/src/pages/DrinkRecipe.jsx"],"names":["React","useState","useEffect","useContext","useHistory","FIRS_SIX","fetchDrinkRecipe","getIngredientesMeasure","isFavorite","handleFavoriteDrink","AppContext","SugestCard","verifyRecipe","shareIcon","whiteHeartIcon","blackHeartIcon","copy","require","DrinkRecipe","foodData","recipe","setRecipe","verify","setVerify","ingrMeasure","setIngrMeasure","copyMessage","setCopyMessage","favorite","setFavorite","history","location","pathname","getData","id","data","split","startCooking","push","share","Object","keys","length","strDrinkThumb","strDrink","strAlcoholic","filterIngridients","map","ingredient","index","filterMeasures","strInstructions","slice","sugestion","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FIRS_SIX } from '../helpers/constants';\nimport fetchDrinkRecipe from '../services/fetchDrinkRecipe ';\nimport getIngredientesMeasure from '../helpers/getDrinkIngrMeasure';\nimport { isFavorite, handleFavoriteDrink } from '../helpers/setFavorite';\nimport AppContext from '../context/context';\nimport SugestCard from '../components/SugestCard';\nimport '../styles/recipe.css';\nimport verifyRecipe from '../helpers/verifyRecipe';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nexport default function DrinkRecipe() {\n  const { foodData } = useContext(AppContext);\n  const [recipe, setRecipe] = useState({});\n  const [verify, setVerify] = useState('new');\n  const [ingrMeasure, setIngrMeasure] = useState({});\n  const [copyMessage, setCopyMessage] = useState('');\n  const [favorite, setFavorite] = useState(false);\n  const history = useHistory();\n  const { location: { pathname } } = history;\n\n  const getData = async (id) => {\n    const data = await fetchDrinkRecipe(id);\n    setRecipe(data);\n    getIngredientesMeasure(data, setIngrMeasure);\n  };\n\n  useEffect(() => {\n    const id = pathname.split('/')[2];\n    getData(id);\n    verifyRecipe(id, setVerify, 'cocktails');\n    isFavorite(id, setFavorite);\n  }, [pathname]);\n\n  const startCooking = () => {\n    history.push(`/drinks/${pathname.split('/')[2]}/in-progress`);\n  };\n\n  const share = () => {\n    copy(`http://localhost:3000${pathname}`);\n    setCopyMessage('Link copied!');\n  };\n\n  if (Object.keys(recipe).length > 0) {\n    return (\n      <div>\n        <img data-testid=\"recipe-photo\" alt=\"drink\" src={ recipe.strDrinkThumb } />\n        <h1 data-testid=\"recipe-title\">{recipe.strDrink}</h1>\n        {copyMessage.length > 0 && (\n          <p>{copyMessage}</p>\n        )}\n        <button\n          data-testid=\"share-btn\"\n          type=\"button\"\n          onClick={ share }\n        >\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={ () => { handleFavoriteDrink(favorite, setFavorite, recipe); } }\n        >\n          <img\n            data-testid=\"favorite-btn\"\n            src={ favorite ? blackHeartIcon : whiteHeartIcon }\n            alt=\"favorite icon\"\n          />\n        </button>\n        <p data-testid=\"recipe-category\">\n          {recipe.strAlcoholic}\n        </p>\n        <ul>\n          { Object.keys(ingrMeasure).length > 0\n          && ingrMeasure.filterIngridients.map((ingredient, index) => (\n            <li\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {`${ingredient} - ${ingrMeasure.filterMeasures[index] || ''}`}\n            </li>\n          ))}\n        </ul>\n        <p data-testid=\"instructions\">\n          {recipe.strInstructions}\n        </p>\n        <div className=\"carousel\">\n          {\n            foodData.length > 0\n            && (foodData.slice(0, FIRS_SIX).map((sugestion, index) => (\n              <SugestCard key={ index } data={ { ...sugestion, index, type: 'food' } } />\n            )))\n          }\n        </div>\n        { verify === 'new' && (\n          <button\n            className=\"fixed-bottom border\"\n            data-testid=\"start-recipe-btn\"\n            type=\"button\"\n            onClick={ startCooking }\n          >\n            Start Recipe\n          </button>\n        )}\n        { verify === 'started' && (\n          <button\n            className=\"fixed-bottom border\"\n            data-testid=\"start-recipe-btn\"\n            type=\"button\"\n          >\n            Continue Recipe\n          </button>\n        )}\n      </div>\n    );\n  }\n  return (<div>loading...</div>);\n}\n"]},"metadata":{},"sourceType":"module"}