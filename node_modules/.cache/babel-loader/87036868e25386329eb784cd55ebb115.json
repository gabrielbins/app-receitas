{"ast":null,"code":"var _jsxFileName = \"/home/gabrielbins/Documentos/repositorio github/app-receitas/src/components/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Header(_ref) {\n  _s();\n\n  let {\n    title,\n    withSearchButton\n  } = _ref;\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  const handleSearchClick = () => {\n    if (!showSearchBar) {\n      setShowSearchBar(true);\n    } else {\n      setShowSearchBar(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"profile-top-btn\",\n          src: profileIcon,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"page-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), withSearchButton &&\n      /*#__PURE__*/\n      // renderização condicional do botão de busca\n      _jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSearchClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": \"search-top-btn\",\n          src: searchIcon,\n          alt: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), showSearchBar &&\n    /*#__PURE__*/\n    // renderização condicional da barra de busca\n    _jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Header, \"XV74Ui1eTaQABsPS4ReMJaDwJIg=\");\n\n_c = Header;\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  withSearchButton: PropTypes.bool.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/gabrielbins/Documentos/repositorio github/app-receitas/src/components/Header.jsx"],"names":["React","useState","Link","PropTypes","profileIcon","searchIcon","SearchBar","Header","title","withSearchButton","showSearchBar","setShowSearchBar","handleSearchClick","propTypes","string","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,eAAe,SAASC,MAAT,OAA6C;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA6B;AAC1D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMW,iBAAiB,GAAG,MAAM;AAC9B,QAAI,CAACF,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA,+BACE;AAAK,yBAAY,iBAAjB;AAAmC,UAAA,GAAG,EAAGP,WAAzC;AAAuD,UAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,uBAAY,YAAhB;AAAA,kBAA+BI;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJF,EAOIC,gBAAgB;AAAA;AAAM;AACpB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAGG,iBAAhC;AAAA,+BACE;AACE,yBAAY,gBADd;AAEE,UAAA,GAAG,EAAGP,UAFR;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAqBIK,aAAa;AAAA;AAAM;AACjB,YAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAtBN;AAAA,kBADF;AA4BD;;GAvCuBH,M;;KAAAA,M;AAyCxBA,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,gBAAgB,EAAEN,SAAS,CAACa,IAAV,CAAeD;AAFhB,CAAnB","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nexport default function Header({ title, withSearchButton }) {\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  const handleSearchClick = () => {\n    if (!showSearchBar) {\n      setShowSearchBar(true);\n    } else {\n      setShowSearchBar(false);\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Link to=\"/profile\">\n          <img data-testid=\"profile-top-btn\" src={ profileIcon } alt=\"Profile\" />\n        </Link>\n        <h1 data-testid=\"page-title\">{ title }</h1>\n\n        {\n          withSearchButton && ( // renderização condicional do botão de busca\n            <button type=\"button\" onClick={ handleSearchClick }>\n              <img\n                data-testid=\"search-top-btn\"\n                src={ searchIcon }\n                alt=\"Search\"\n              />\n            </button>\n          )\n        }\n\n      </header>\n      {\n        showSearchBar && ( // renderização condicional da barra de busca\n          <SearchBar />\n        )\n      }\n    </>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  withSearchButton: PropTypes.bool.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}