{"ast":null,"code":"const getIngredientesMeasure = (recipe, setIngrMeasure) => {\n  const ingrKeys = Object.keys(recipe).filter(key => key.includes('strIngredient'));\n  const ingrValue = ingrKeys.map(key => recipe[key]);\n  const measureKeys = Object.keys(recipe).filter(key => key.includes('strMeasure'));\n  const measureValue = measureKeys.map(key => recipe[key]);\n  const filterIngridients = ingrValue.filter(ingridient => ingridient !== '' && ingridient !== null);\n  const filterMeasures = measureValue.filter(measure => measure !== ' ' && measure !== null);\n  setIngrMeasure({\n    filterIngridients,\n    filterMeasures\n  });\n};\n\nexport default getIngredientesMeasure;","map":{"version":3,"sources":["/home/gabriel/projetos/sd-017-project-recipes-app/src/helpers/getDrinkIngrMeasure.js"],"names":["getIngredientesMeasure","recipe","setIngrMeasure","ingrKeys","Object","keys","filter","key","includes","ingrValue","map","measureKeys","measureValue","filterIngridients","ingridient","filterMeasures","measure"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,CAACC,MAAD,EAASC,cAAT,KAA4B;AACzD,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,GAAD,IAASA,GAAG,CAACC,QAAJ,CAAa,eAAb,CAApC,CAAjB;AACA,QAAMC,SAAS,GAAGN,QAAQ,CAACO,GAAT,CAAcH,GAAD,IAASN,MAAM,CAACM,GAAD,CAA5B,CAAlB;AACA,QAAMI,WAAW,GAAGP,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA4BC,GAAD,IAASA,GAAG,CAACC,QAAJ,CAAa,YAAb,CAApC,CAApB;AACA,QAAMI,YAAY,GAAGD,WAAW,CAACD,GAAZ,CAAiBH,GAAD,IAASN,MAAM,CAACM,GAAD,CAA/B,CAArB;AACA,QAAMM,iBAAiB,GAAGJ,SAAS,CAChCH,MADuB,CACfQ,UAAD,IAAiBA,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAK,IADrC,CAA1B;AAEA,QAAMC,cAAc,GAAGH,YAAY,CAChCN,MADoB,CACZU,OAAD,IAAcA,OAAO,KAAK,GAAZ,IAAmBA,OAAO,KAAK,IADhC,CAAvB;AAEAd,EAAAA,cAAc,CAAC;AAAEW,IAAAA,iBAAF;AAAqBE,IAAAA;AAArB,GAAD,CAAd;AACD,CAVD;;AAYA,eAAef,sBAAf","sourcesContent":["const getIngredientesMeasure = (recipe, setIngrMeasure) => {\n  const ingrKeys = Object.keys(recipe).filter((key) => key.includes('strIngredient'));\n  const ingrValue = ingrKeys.map((key) => recipe[key]);\n  const measureKeys = Object.keys(recipe).filter((key) => key.includes('strMeasure'));\n  const measureValue = measureKeys.map((key) => recipe[key]);\n  const filterIngridients = ingrValue\n    .filter((ingridient) => (ingridient !== '' && ingridient !== null));\n  const filterMeasures = measureValue\n    .filter((measure) => (measure !== ' ' && measure !== null));\n  setIngrMeasure({ filterIngridients, filterMeasures });\n};\n\nexport default getIngredientesMeasure;\n"]},"metadata":{},"sourceType":"module"}