{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/sd-017-project-recipes-app/src/components/CategoryButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport AppContext from '../context/context';\nimport { DRINKS, FOODS } from '../helpers/constants';\nimport { filterDrinks, filterFoods } from '../helpers/categoryFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CategoryButtons(_ref) {\n  _s();\n\n  let {\n    category,\n    filter\n  } = _ref;\n  const {\n    setFoodData,\n    setDrinkData\n  } = useContext(AppContext);\n  const [activeFilter, setActiveFilter] = useState(false);\n\n  const callFilter = () => {\n    // esta função deveria chamar os filtros que estão na pasta Helpers, mas por algum motivo\n    // as função não estão sendo chamadas.\n    console.log(filter);\n    if (filter === FOODS) filterFoods(setFoodData, activeFilter, category);\n    if (filter === DRINKS) filterDrinks(setDrinkData, activeFilter, category);\n  };\n\n  const handleCategoryClick = () => {\n    if (!activeFilter) {\n      setActiveFilter(true);\n    } else setActiveFilter(false);\n\n    callFilter();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      type: \"radio\",\n      name: \"categoryBtn\",\n      \"data-testid\": \"All-category-filter\",\n      onChange: handleCategoryClick,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      type: \"radio\",\n      name: \"categoryBtn\",\n      \"data-testid\": `${category}-category-filter`,\n      onChange: handleCategoryClick,\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CategoryButtons, \"zGFlDQj/4UYadn9TBhrvB8SJSbU=\");\n\n_c = CategoryButtons;\nCategoryButtons.propTypes = {\n  category: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryButtons\");","map":{"version":3,"sources":["/home/gabriel/projetos/sd-017-project-recipes-app/src/components/CategoryButtons.jsx"],"names":["React","useContext","useState","PropTypes","ToggleButton","AppContext","DRINKS","FOODS","filterDrinks","filterFoods","CategoryButtons","category","filter","setFoodData","setDrinkData","activeFilter","setActiveFilter","callFilter","console","log","handleCategoryClick","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,sBAA9B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,2BAA1C;;;AAEA,eAAe,SAASC,eAAT,OAA+C;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAsB;AAC5D,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCb,UAAU,CAACI,UAAD,CAAhD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvB;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,QAAIA,MAAM,KAAKL,KAAf,EAAsBE,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BJ,QAA5B,CAAX;AACtB,QAAIC,MAAM,KAAKN,MAAf,EAAuBE,YAAY,CAACM,YAAD,EAAeC,YAAf,EAA6BJ,QAA7B,CAAZ;AACxB,GAND;;AAQA,QAAMS,mBAAmB,GAAG,MAAM;AAChC,QAAI,CAACL,YAAL,EAAmB;AACjBC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFD,MAEOA,eAAe,CAAC,KAAD,CAAf;;AACPC,IAAAA,UAAU;AACX,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,qBAAY,qBAHd;AAIE,MAAA,QAAQ,EAAGG,mBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,YAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,qBAAe,GAAET,QAAS,kBAH5B;AAIE,MAAA,QAAQ,EAAGS,mBAJb;AAAA,gBAMIT;AANJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAqBD;;GAxCuBD,e;;KAAAA,e;AA0CxBA,eAAe,CAACW,SAAhB,GAA4B;AAC1BV,EAAAA,QAAQ,EAAER,SAAS,CAACmB,MAAV,CAAiBC,UADD;AAE1BX,EAAAA,MAAM,EAAET,SAAS,CAACmB,MAAV,CAAiBC;AAFC,CAA5B","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport AppContext from '../context/context';\n\nimport { DRINKS, FOODS } from '../helpers/constants';\nimport { filterDrinks, filterFoods } from '../helpers/categoryFilter';\n\nexport default function CategoryButtons({ category, filter }) {\n  const { setFoodData, setDrinkData } = useContext(AppContext);\n  const [activeFilter, setActiveFilter] = useState(false);\n\n  const callFilter = () => {\n    // esta função deveria chamar os filtros que estão na pasta Helpers, mas por algum motivo\n    // as função não estão sendo chamadas.\n    console.log(filter);\n    if (filter === FOODS) filterFoods(setFoodData, activeFilter, category);\n    if (filter === DRINKS) filterDrinks(setDrinkData, activeFilter, category);\n  };\n\n  const handleCategoryClick = () => {\n    if (!activeFilter) {\n      setActiveFilter(true);\n    } else setActiveFilter(false);\n    callFilter();\n  };\n\n  return (\n    <>\n      <ToggleButton\n        type=\"radio\"\n        name=\"categoryBtn\"\n        data-testid=\"All-category-filter\"\n        onChange={ handleCategoryClick }\n      >\n        All\n      </ToggleButton>\n\n      <ToggleButton\n        type=\"radio\"\n        name=\"categoryBtn\"\n        data-testid={ `${category}-category-filter` }\n        onChange={ handleCategoryClick }\n      >\n        { category }\n      </ToggleButton>\n    </>\n  );\n}\n\nCategoryButtons.propTypes = {\n  category: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}