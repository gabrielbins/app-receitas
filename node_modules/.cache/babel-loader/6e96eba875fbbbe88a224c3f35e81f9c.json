{"ast":null,"code":"export const isFavorite = (id, setFavorite) => {\n  const favoriteRecipes = localStorage.getItem('favoriteRecipes');\n\n  if (favoriteRecipes) {\n    const findFavorite = JSON.parse(favoriteRecipes).find(favorite => favorite.id === id);\n    if (!findFavorite) return setFavorite(false);\n    return setFavorite(true);\n  }\n\n  if (!favoriteRecipes) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n  }\n\n  return setFavorite(false);\n};\nexport const handleFavoriteMeal = (favorite, setFavorite, recipe) => {\n  const storageData = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (favorite === false) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([...storageData, {\n      id: recipe.idMeal,\n      type: 'food',\n      nationality: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb\n    }]));\n  }\n\n  if (favorite === true) {\n    const filterStorage = storageData.filter(data => data.id !== recipe.idMeal);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filterStorage));\n  }\n\n  setFavorite(!favorite);\n};\nexport const handleFavoriteDrink = (favorite, setFavorite, recipe) => {\n  const storageData = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  if (favorite === false) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([...storageData, {\n      id: recipe.idDrink,\n      type: 'drink',\n      nationality: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb\n    }]));\n  }\n\n  if (favorite === true) {\n    const filterStorage = storageData.filter(data => data.id !== recipe.idDrink);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filterStorage));\n  }\n\n  setFavorite(!favorite);\n};","map":{"version":3,"sources":["/home/gabrielbins/Documentos/repositorio github/app-receitas/src/helpers/setFavorite.js"],"names":["isFavorite","id","setFavorite","favoriteRecipes","localStorage","getItem","findFavorite","JSON","parse","find","favorite","setItem","stringify","handleFavoriteMeal","recipe","storageData","idMeal","type","nationality","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","filterStorage","filter","data","handleFavoriteDrink","idDrink","strAlcoholic","strDrink","strDrinkThumb"],"mappings":"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","sourcesContent":["export const isFavorite = (id, setFavorite) => {\n  const favoriteRecipes = localStorage.getItem('favoriteRecipes');\n  if (favoriteRecipes) {\n    const findFavorite = JSON.parse(favoriteRecipes)\n      .find((favorite) => favorite.id === id);\n    if (!findFavorite) return setFavorite(false);\n    return setFavorite(true);\n  } if (!favoriteRecipes) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n  }\n  return setFavorite(false);\n};\n\nexport const handleFavoriteMeal = (favorite, setFavorite, recipe) => {\n  const storageData = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favorite === false) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([...storageData, {\n      id: recipe.idMeal,\n      type: 'food',\n      nationality: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n    }]));\n  }\n  if (favorite === true) {\n    const filterStorage = storageData\n      .filter((data) => (data.id !== recipe.idMeal));\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filterStorage));\n  }\n  setFavorite(!favorite);\n};\n\nexport const handleFavoriteDrink = (favorite, setFavorite, recipe) => {\n  const storageData = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (favorite === false) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([...storageData, {\n      id: recipe.idDrink,\n      type: 'drink',\n      nationality: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n    }]));\n  }\n  if (favorite === true) {\n    const filterStorage = storageData\n      .filter((data) => (data.id !== recipe.idDrink));\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filterStorage));\n  }\n  setFavorite(!favorite);\n};\n"]},"metadata":{},"sourceType":"module"}